Script started on Sun May  6 20:23:42 2018
[?1034hbash-3.2$ cat puzzle.h[K[Kapp.h
#ifndef PUZZLE_APP_H
#define PUZZLE_APP_H

#include <QApplication>
#include <QMainWindow>

class QAction;
class PuzzleModel;
class PuzzleView;

/** Controller class for puzzle game - manages all other objects. */
class PuzzleApp : public QApplication {
    Q_OBJECT
  public:
    PuzzleApp(int argc, char* argv[]);
  private:
    void createWidgets();
    void createActions();
    QMainWindow m_MainWin;
    PuzzleModel *m_Model;
    PuzzleView *m_View;
    QAction* m_Shuffle;
};
#endif        //  #ifndef PUZZLE_APP_H

bash-3.2$ cat puzzleapp.cpp
//Thao Phuong

#include <QGridLayout>
#include <QAction>
#include <QMenu>
#include <QMenuBar>
#include "puzzleapp.h"
#include "puzzlemodel.h"
#include "puzzleview.h"


void PuzzleApp::createWidgets() {
    m_Model = new PuzzleModel(3,3,this);
    m_View = new PuzzleView(m_Model);
    m_MainWin.setCentralWidget(m_View);
}

void PuzzleApp::createActions() {
    m_Shuffle = new QAction(this);
    m_Shuffle->setText("Shuffle");
    QMenu* game = new QMenu(&m_MainWin);
    game->setTitle("Game");
    m_MainWin.menuBar()->addMenu(game);
    game->addAction(m_Shuffle);
    connect (m_Shuffle, SIGNAL(triggered()), 
             m_Model, SLOT(shuffle()));
}

PuzzleApp::PuzzleApp(int argc, char** argv) :
    QApplication(argc, argv) {
    createWidgets();
    createActions();
    m_MainWin.setWindowTitle("Sample_15_Puzzle");
    m_MainWin.show();
}
bash-3.2$ cat puzzle a[K
fifteen-puzzle.pro       puzzleapp.cpp            puzzleview.cpp
fifteen-puzzle.pro.user  puzzleapp.h              puzzleview.h
hw06script               puzzlemodel.cpp          
main.cpp                 puzzlemodel.h            
bash-3.2$ cat puzzle mo[K[K[Kmodel.h
#ifndef PUZZLE_MODEL_H
#define PUZZLE_MODEL_H

#include <QObject>
#include <QList>
#include <QString>


/** Stores the internal representation of a puzzle, 
    containing no knowledge of the view */
class PuzzleModel : public QObject {
    Q_OBJECT
  public:
    /** return true of the puzzle is ordered */
    bool checkOrderedArray();

    /** Creates a new rows*columns puzzle */
    PuzzleModel(int rows, int columns, QObject* parent=0);

    /** Returns the index into m_Positions for a given r,c 
    @return 0 if the empty square, or the tile# at that position. */
    int value(int r, int c) const;

    QString toString() const;

	/** @return dimension of puzzle */
    int size() const;

    /** Attempts to slide the numbered tile. 
    @return true if it succeeds, which is only
    possible if square 0 is a neighbor. 
    */    
    bool slide(int tilenum); 

    /** @return true if two positions are neighboring.
        pos1 and pos2 are index positions (offsets from 0)
	*/
    bool neighboring(int pos1, int pos2) const;

    int rows() const {return m_Rows;}
    int cols() const {return m_Cols;}

    /** @return the index into an array that stores the 
        tile at position (r,c).
    */
    int index(int r, int c) const;
  public slots:
    void shuffle(); 
  signals:
    void gridChanged();
	
  private:
    QList<int> m_Positions;
    int m_Rows, m_Cols;
};

#endif        //  #ifndef PUZZLE_MODEL_H

bash-3.2$ cat puzzlemodel.cpp
//Thao Phuong

#include "puzzlemodel.h"
#include <QStringList>
#include <QMessageBox>
// time()
#include <time.h>
// random()
#include <stdlib.h>
// abs()
#include <math.h>

PuzzleModel::PuzzleModel(int r, int c, QObject* parent) :
    QObject(parent), m_Rows(r), m_Cols(c) {
    int val=0;
    for (r=0; r<m_Rows; ++r)
        for (c=0; c<m_Cols; ++c)
            m_Positions << val++;
    shuffle();
}

int PuzzleModel::size() const {
    return m_Rows * m_Cols;
}

/**
   @param position1, position2 are positions in a m*n matrix
   @return true if the positions are neighboring.
*/
bool PuzzleModel::neighboring(int position1, int position2) const {
    int abval = abs(position1 - position2);
    return (abval == 1) or (abval == m_Cols);
}

//swapping value
bool PuzzleModel::slide(int tilenum) {
    int mypos = m_Positions.indexOf(tilenum);
    int zp = m_Positions.indexOf(0);
    if (neighboring(zp, mypos)) {
        m_Positions.swap(zp, mypos);
        emit gridChanged();
        return true;
    }
    return false;
}

void PuzzleModel::shuffle() {
    // seed the random number generator with the current time
    srandom(time(0));
    int i=0;
    while (i < 100) {
        int tilenum = random() % size();
        if (slide(tilenum)) ++i;
    }
}

int PuzzleModel::value(int r, int c) const {
    return m_Positions.at(index(r,c));
}

int PuzzleModel::index(int r, int c) const {
    return r*m_Cols+c;
}

bool PuzzleModel::checkOrderedArray() {
    int orderedNumber = 1;
    int count = 0;
    for (int r = 0; r < m_Rows; ++r) {
        for (int c = 0; c < m_Cols; ++c) {
            if (value(r, c)  != orderedNumber)
                return false;
            else {
                count += 1;
                orderedNumber += 1;
                if (count == size() - 1) {
                    return true;
                }
            }
        }
    }
    return false;
}

QString PuzzleModel::toString() const {
    QStringList rows;
    for (int r=0; r<m_Rows; ++r) {
        QStringList currentRow;
        for (int c=0; c<m_Cols; ++c) {
            int squareNumber = m_Positions.at(index(r,c));
            QString stringValue = QString("%1").arg(squareNumber);
            currentRow << stringValue;
        }
        rows << currentRow.join("\t");
    }
    return rows.join("\n");
}
bash-3.2$ cat puzzle
puzzleapp.cpp    puzzlemodel.cpp  puzzleview.cpp   
puzzleapp.h      puzzlemodel.h    puzzleview.h     
bash-3.2$ cat puzzleview.h
#ifndef PUZZLE_VIEW_H
#define PUZZLE_VIEW_H

#include <QApplication>
#include <QMainWindow>
#include <QPushButton>
#include <QActionGroup>
#include <QButtonGroup>

class QGridLayout;
class PuzzleModel;


/** A single tile in the GUI of the 15 puzzle */
class Tile : public QPushButton {
    Q_OBJECT
  public:
    Tile(int tileNumber);
    int getNumber() {return m_Number;}
  private:
    int m_Number;
    
};

/** A view for the puzzle */
class PuzzleView : public QWidget {
    Q_OBJECT
  public:
    PuzzleView(PuzzleModel* model);
  public slots:
    void refresh();
    void tryToSlide(QAbstractButton* button);
  private:
    PuzzleModel *m_Model;
    QGridLayout *m_Layout;
    QButtonGroup m_Tiles;
};

#endif        //  #ifndef PUZZLE_VIEW_H

bash-3.2$ cat puzzleview.cpp
//Thao Phuong

#include <QGridLayout>
#include <QAbstractButton>
#include "puzzleview.h"
#include "puzzlemodel.h"
#include <QPushButton>
#include <QMessageBox>

Tile::Tile(int tileNumber): m_Number(tileNumber) {
    QString label = "";
    if (tileNumber > 0) {
        label = QString("%1").arg(tileNumber);
    }
    setText(label);
    QString longText = "click here to push Tile # " + label;
    setWhatsThis(longText);
    setToolTip(longText);
    setStatusTip(longText);
}


PuzzleView::PuzzleView(PuzzleModel* model) : m_Model(model) {
    // Create the buttons
    int numTiles = m_Model->size();
    m_Layout = new QGridLayout(this);
    Tile* t(0);
    for (int i=0; i< numTiles; ++i) {
        QString name = QString("%1").arg(i);
        t = new Tile(i);
        m_Tiles.addButton(t);
    }

    /* This helps avoid connecting a signal for each button */      
    connect (&m_Tiles, SIGNAL(buttonClicked(QAbstractButton*)),
	    this, SLOT(tryToSlide(QAbstractButton*)));
    
    connect (m_Model, SIGNAL(gridChanged()), 
             this, SLOT(refresh()));
    refresh();
}

void PuzzleView::tryToSlide(QAbstractButton* button) {
    Tile* tile = qobject_cast<Tile*>(button);
    int number = tile->getNumber();
    m_Model->slide(number);

    if(m_Model->checkOrderedArray()) {
            QMessageBox msgBox;
            msgBox.setText("Congratulation!");
            msgBox.setInformativeText("Nice Good, You WIN!");
            msgBox.setWindowModality(Qt::WindowModal);
            msgBox.setIcon(QMessageBox::Information);

            QPushButton *playAgainButton = msgBox.addButton(tr("Play Again"), QMessageBox::ActionRole);
            QPushButton *quitButton = msgBox.addButton(tr("Quit"), QMessageBox::ActionRole);

            connect (playAgainButton, SIGNAL(clicked()),
                     m_Model, SLOT(shuffle()));
            connect (quitButton, SIGNAL(clicked()),
                     qApp, SLOT(closeAllWindows()));

            msgBox.exec();
    }
}

void PuzzleView::refresh() {
    QList<QAbstractButton*> buttonList = m_Tiles.buttons();
    for (int r = 0; r < m_Model->rows(); ++r) {
        for (int c = 0; c < m_Model->cols(); ++c) {
            int v = m_Model->value(r,c);
            QAbstractButton* b = buttonList.at(v);
            m_Layout->addWidget(b, r, c);
        }
    }
    QPushButton* bShuffle = new QPushButton("Shuffle");
    QPushButton* bQuit = new QPushButton("Quit");
    m_Layout->addWidget(bShuffle, m_Model->rows()-2, m_Model->cols()+1);
    m_Layout->addWidget(bQuit, m_Model->rows()-1, m_Model->cols()+1);
    connect (bShuffle, SIGNAL(clicked()),
             m_Model, SLOT(shuffle()));

    connect (bQuit, SIGNAL(clicked()),
             qApp, SLOT(closeAllWindows()));
}
bash-3.2$ cat hw[K[K[K[K[K[Kcat puz[Kzzlep[K
puzzleapp.cpp    puzzlemodel.cpp  puzzleview.cpp   
puzzleapp.h      puzzlemodel.h    puzzleview.h     
bash-3.2$ cat puzzle[K[K[K[K[K[Kfo[Kifteen-puzzle.pro

TEMPLATE = app
TARGET =
DEPENDPATH += .
INCLUDEPATH += .

CONFIG -= app_bundle
# Input
HEADERS += puzzleapp.h puzzlemodel.h puzzleview.h
SOURCES += main.cpp puzzleapp.cpp puzzlemodel.cpp puzzleview.cpp
bash-3.2$ make[K[K[K[Kqmake
bash-3.2$ make
clang++ -c -pipe -stdlib=libc++ -mmacosx-version-min=10.7 -O2 -arch x86_64 -Wall -W -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Cellar/qt@4/4.8.7_3/etc/qt4/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/include -I. -I. -F/usr/local/lib -o main.o main.cpp
clang++ -c -pipe -stdlib=libc++ -mmacosx-version-min=10.7 -O2 -arch x86_64 -Wall -W -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Cellar/qt@4/4.8.7_3/etc/qt4/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/include -I. -I. -F/usr/local/lib -o puzzleapp.o puzzleapp.cpp
clang++ -c -pipe -stdlib=libc++ -mmacosx-version-min=10.7 -O2 -arch x86_64 -Wall -W -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Cellar/qt@4/4.8.7_3/etc/qt4/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/include -I. -I. -F/usr/local/lib -o puzzlemodel.o puzzlemodel.cpp
clang++ -c -pipe -stdlib=libc++ -mmacosx-version-min=10.7 -O2 -arch x86_64 -Wall -W -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Cellar/qt@4/4.8.7_3/etc/qt4/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/include -I. -I. -F/usr/local/lib -o puzzleview.o puzzleview.cpp
/usr/local/bin/moc -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Cellar/qt@4/4.8.7_3/etc/qt4/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/include -I. -I. -F/usr/local/lib -D__APPLE__ -D__GNUC__ puzzleapp.h -o moc_puzzleapp.cpp
clang++ -c -pipe -stdlib=libc++ -mmacosx-version-min=10.7 -O2 -arch x86_64 -Wall -W -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Cellar/qt@4/4.8.7_3/etc/qt4/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/include -I. -I. -F/usr/local/lib -o moc_puzzleapp.o moc_puzzleapp.cpp
/usr/local/bin/moc -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Cellar/qt@4/4.8.7_3/etc/qt4/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/include -I. -I. -F/usr/local/lib -D__APPLE__ -D__GNUC__ puzzlemodel.h -o moc_puzzlemodel.cpp
clang++ -c -pipe -stdlib=libc++ -mmacosx-version-min=10.7 -O2 -arch x86_64 -Wall -W -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Cellar/qt@4/4.8.7_3/etc/qt4/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/include -I. -I. -F/usr/local/lib -o moc_puzzlemodel.o moc_puzzlemodel.cpp
/usr/local/bin/moc -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Cellar/qt@4/4.8.7_3/etc/qt4/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/include -I. -I. -F/usr/local/lib -D__APPLE__ -D__GNUC__ puzzleview.h -o moc_puzzleview.cpp
clang++ -c -pipe -stdlib=libc++ -mmacosx-version-min=10.7 -O2 -arch x86_64 -Wall -W -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Cellar/qt@4/4.8.7_3/etc/qt4/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt@4/4.8.7_3/lib/QtGui.framework/Versions/4/Headers -I/usr/local/include -I. -I. -F/usr/local/lib -o moc_puzzleview.o moc_puzzleview.cpp
clang++ -headerpad_max_install_names -stdlib=libc++ -mmacosx-version-min=10.7 -arch x86_64 -o fifteen-puzzle main.o puzzleapp.o puzzlemodel.o puzzleview.o moc_puzzleapp.o moc_puzzlemodel.o moc_puzzleview.o   -F/usr/local/lib -L/usr/local/lib -framework QtGui -L/usr/local/opt/openssl/lib -L/usr/local/Cellar/qt@4/4.8.7_3/lib -F/usr/local/Cellar/qt@4/4.8.7_3/lib -framework QtCore 
bash-3.2$ ./fifteen-puzzle 
bash-3.2$ make[K[K[K[Kexit
exit

Script done on Sun May  6 20:26:53 2018
